[{"/Users/nolits/Documents/fs1010/assignment/assignment1/1-foto-gal/src/index.js":"1","/Users/nolits/Documents/fs1010/assignment/assignment1/1-foto-gal/src/App.js":"2","/Users/nolits/Documents/fs1010/assignment/assignment1/1-foto-gal/src/reportWebVitals.js":"3","/Users/nolits/Documents/fs1010/assignment/assignment1/github/FS1010_Assignment1_Style_Photo_Gallery/src/index.js":"4","/Users/nolits/Documents/fs1010/assignment/assignment1/github/FS1010_Assignment1_Style_Photo_Gallery/src/App.js":"5","/Users/nolits/Documents/fs1010/assignment/assignment1/github/FS1010_Assignment1_Style_Photo_Gallery/src/reportWebVitals.js":"6"},{"size":500,"mtime":1630561074200,"results":"7","hashOfConfig":"8"},{"size":1246,"mtime":1630927951488,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1630561074200,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1630987612892,"results":"11","hashOfConfig":"12"},{"size":2422,"mtime":1631079056676,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1630987612892,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1r7ve3s",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"18na0o",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/nolits/Documents/fs1010/assignment/assignment1/1-foto-gal/src/index.js",[],["31","32"],"/Users/nolits/Documents/fs1010/assignment/assignment1/1-foto-gal/src/App.js",["33","34"],"//import logo from './logo.svg';\n//import logo from '../src/images/old-city-hall.png';\nimport logo1 from '../src/images/city-skyline.jpg';\nimport logo2 from '../src/images/old-city-hall.jpg';\nimport logo3 from '../src/images/cn-tower.jpg';\nimport logo4 from '../src/images/rom.jpg';\nimport logo5 from '../src/images/rogers-center.jpg';\nimport logo6 from '../src/images/new-city-hall.jpg';\n\n\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const images = [logo1, logo2, logo3, logo4, logo5, logo6];\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          The City of <strong>Toronto</strong>\n        </p>\n        <p className=\"p-historical\"> Historical Sites & <strong>More</strong></p>\n      </header>\n      <section class=\"grid\">\n        {\n          images.map(image => <img src={image} alt=\"logo\" onClick={()=>setSelectedImage(image)} />)\n        }\n      </section>\n      <div id='overlay' style={{visibility: selectedImage ? 'visible': 'hidden'}}>\n        <h1><a class=\"close\" onClick={ ()=>setSelectedImage(null) }>X</a></h1>\n        <img src={selectedImage} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nolits/Documents/fs1010/assignment/assignment1/1-foto-gal/src/reportWebVitals.js",[],"/Users/nolits/Documents/fs1010/assignment/assignment1/github/FS1010_Assignment1_Style_Photo_Gallery/src/index.js",[],["35","36"],"/Users/nolits/Documents/fs1010/assignment/assignment1/github/FS1010_Assignment1_Style_Photo_Gallery/src/App.js",["37","38"],"//import logo from './logo.svg';\n//import logo from '../src/images/old-city-hall.png';\nimport logo1 from '../src/images/city-skyline.jpg';\nimport logo2 from '../src/images/old-city-hall.jpg';\nimport logo3 from '../src/images/cn-tower.jpg';\nimport logo4 from '../src/images/rom.jpg';\nimport logo5 from '../src/images/rogers-center.jpg';\nimport logo6 from '../src/images/new-city-hall.jpg';\n\n\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  // const images = [logo1, logo2, logo3, logo4, logo5, logo6];\n\n  const images = [\n    {pic: logo1, site: \"Toronto\", desc: \"The Skyline\"},\n    {pic: logo2, site: \"Old City Hall\", desc: \"The Clock Tower\"},\n    {pic: logo3, site: \"The CN Tower\", desc: \"One of the Worlds Tallest Towers\"},\n    {pic: logo4, site: \"Royal Ontario Museum\", desc: \"Most Visited Museum in Canada\"},\n    {pic: logo5, site: \"The Rogeres Center\", desc: \"Toronto's Iconic Skydome\"},\n    {pic: logo6, site: \"Toronto City Hall\", desc: \"A Brutalist Architecture Masterpiece\"},  \n  ];\n\n\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          The City of <strong>Toronto</strong>\n        </p>\n        <p className=\"p-historical\"> Historical Sites & <strong>More</strong></p>\n      </header>\n      <section class=\"grid\">\n        {\n          images.map(image => \n\n            <div className=\"galleryItem-container\">\n\n                  <img className=\"img\" src={image.pic} alt=\"logo\" onClick={()=>setSelectedImage(image.pic)}/>\n                  <div className=\"imgOverlay imgOverlayGradient\"> \n                      <div className=\"siteTxt-container\">{image.site}</div>\n                      <div className=\"siteDescTxt-container\">{image.desc}</div>\n                  </div>\n            </div>\n          )\n        }\n      </section>\n      <div id='overlay' \n          style={{\n            visibility: selectedImage ? 'visible': 'hidden',\n            background: \"linear-gradient(45deg, rgba(29, 236, 197, 0.9), rgba(91, 14, 214, 0.7) 100%)\"\n            /*background: \"linear-gradient(to right bottom, rgba(255, 255, 255, 1) 50%, rgba(0, 0, 0, 0) 100%)\"*/\n            \n          }}>TEXT HERE\n        <h1 className=\"closeDisplay\"><a class=\"close\" onClick={ ()=>setSelectedImage(null) }>X</a></h1>\n        <img src={selectedImage} />\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;","/Users/nolits/Documents/fs1010/assignment/assignment1/github/FS1010_Assignment1_Style_Photo_Gallery/src/reportWebVitals.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":32,"column":13,"nodeType":"45","endLine":32,"endColumn":69},{"ruleId":"46","severity":1,"message":"47","line":33,"column":9,"nodeType":"45","endLine":33,"endColumn":36},{"ruleId":"39","replacedBy":"48"},{"ruleId":"41","replacedBy":"49"},{"ruleId":"43","severity":1,"message":"44","line":59,"column":38,"nodeType":"45","endLine":59,"endColumn":94},{"ruleId":"46","severity":1,"message":"47","line":60,"column":9,"nodeType":"45","endLine":60,"endColumn":36},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["50"],["51"],"no-global-assign","no-unsafe-negation"]